
@{
    ViewBag.Title = "InformeSolicitudPdf";
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalle de Solicitud de Cambio</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body { font-family: sans-serif; margin: 0; padding: 0; background-color: #e0e0e0; }
        .page {
            width: 210mm;
            min-height: 297mm;
            padding: 15mm;
            margin: 10mm auto;
            background: white;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            box-sizing: border-box;
        }
        table { width: 100%; border-collapse: collapse; margin-bottom: 10px; font-size: 10pt; }
        td, th { border: 1px solid black; padding: 5px; vertical-align: top; }
        th { background-color: #c5e0b4; text-align: left; font-weight: bold; }
        .section-title { background-color: #c5e0b4; font-weight: bold; padding: 5px; border: 1px solid black; margin-top: 10px; margin-bottom: 0px; font-size: 11pt;}
        .field-label { font-weight: bold; display: inline-block; min-width: 150px; }
        .field-value { display: inline-block; }
        .field-description { font-size: 9pt; color: #555; font-style: italic; margin-left: 10px; }
        .content-block { border: 1px solid black; border-top: none; padding: 8px; min-height: 30px; }
        .content-block p, .content-block div { margin: 0 0 5px 0; line-height: 1.4; }
        .inline-fields td { border: none; padding: 2px 5px; }
        .action-buttons { position: fixed; top: 10px; right: 10px; background: rgba(255, 255, 255, 0.9); padding: 10px; border-radius: 5px; box-shadow: 0 2px 5px rgba(0,0,0,0.2); z-index: 100;}
        .action-buttons button, .action-buttons a { background-color: #5b9bd5; color: white; border: none; padding: 8px 12px; margin-left: 5px; border-radius: 4px; cursor: pointer; font-size: 12px; text-decoration: none; }
        .action-buttons button:hover, .action-buttons a:hover { background-color: #4a8ac7; }
        .btn-danger { background-color: #e74c3c !important; }
        .btn-danger:hover { background-color: #c0392b !important; }
        .btn-warning { background-color: #f39c12 !important; }
        .btn-warning:hover { background-color: #e67e22 !important; }
        .btn-secondary { background-color: #7f8c8d !important; }
        .btn-secondary:hover { background-color: #606f70 !important; }

        .editable-target, .editable-block { transition: background-color 0.2s ease; }
        .editing .editable-target, .editing .editable-block { border: 1px dashed #3498db; background-color: #f0f9ff; cursor: text; }
        .editing .editable-target { min-height: 1em; display: inline-block; }
        .editing .editable-block { min-height: 40px; display: block; padding: 3px; }
        .editing [contenteditable="true"]:focus { outline: 1px solid #3498db; background-color: #e6f4ff; box-shadow: 0 0 3px rgba(52, 152, 219, 0.5); }

        @@media print {
            html, body { margin: 0; padding: 0; background-color: white; }
            .page { margin: 0; padding: 5mm 10mm;  box-shadow: none; border: none; width: 100%; min-height: 0; height: auto;}
            .action-buttons { display: none; }
            th, td, p, div { font-size: 9pt; }
            .field-description { display: none; }
            .editable-target, .editable-block { border: none !important; background-color: transparent !important; cursor: default !important; min-height: auto !important; display: inline !important; padding: 0 !important; } /* Resetear estilos de edición */
            .editable-block { display: block !important; }
            .section-title, .content-block { page-break-inside: avoid; }
            table { page-break-inside: auto; }
            tr { page-break-inside: avoid; page-break-after: auto; }
            thead { display: table-header-group; }
        }
    </style>
</head>
<body>
    <div class="action-buttons">
        <a href="./" title="Volver a la Lista"><i class="fas fa-arrow-left"></i> Volver</a>
        <button id="btnEdit" title="Habilitar Edición"><i class="fas fa-edit"></i> Editar</button>
        <button id="btnSave" title="Guardar Cambios" style="display: none;"><i class="fas fa-save"></i> Guardar</button>
        <button id="btnCancelEdit" title="Cancelar Edición" style="display: none;" class="btn-secondary"><i class="fas fa-times"></i> Cancelar</button>
        <button id="btnDelete" class="btn-danger" title="Eliminar Solicitud"><i class="fas fa-trash"></i> Eliminar</button>
        <button id="btnPrint" title="Exportar a PDF (Imprimir)"><i class="fas fa-print"></i> Exportar PDF</button>
    </div>

    <div class="page" id="solicitudContent">
        <table>
            <tr>
                <th style="font-size: 16pt; text-align: center; height: 40px;" colspan="3">SOLICITUD DE CAMBIO</th>
                <td style="width: 25%;">
                    <span class="field-label">No de Solicitud:</span>
                    <span class="field-value" id="numSolicitud">[Cargando...]</span>
                </td>
            </tr>
            <tr>
                <td colspan="3"></td>
                <td>
                    <span class="field-label">Fecha Solicitud:</span>
                    <span class="field-value editable-target" data-field="fechaSolicitud">[dd/mm/aaaa]</span>
                </td>
            </tr>
        </table>

        <div class="section-title">SOLICITANTE</div>
        <div class="content-block">
            <p><span class="field-label">Solicitada por:</span> <span class="field-value editable-target" data-field="solicitante">[Nombre Cliente]</span></p>
            <p><span class="field-label">Proyecto/Producto:</span> <span class="field-value editable-target" data-field="proyecto">[Nombre Proyecto]</span></p>
        </div>

        <div class="section-title">SOLICITUD</div>
        <div class="content-block">
            <p><span class="field-label">Objetivo:</span> <span class="field-description">Señale de manera abreviada y precisa el objetivo de la solicitud de cambio.</span></p>
            <p><span class="field-value editable-target" data-field="objetivo">[Objetivo de la solicitud]</span></p>

            <p style="margin-top: 10px;"><span class="field-label">Descripción del Cambio solicitado:</span> <span class="field-description">Especifique el conjunto de características...</span></p>
            <div class="field-value editable-block" data-field="descripcion">[Descripción detallada...]</div>

            <p style="margin-top: 10px;"><span class="field-label">Elemento(s) afectado(s):</span></p>
            <p><span class="field-value editable-target" data-field="elementoAfectado">[Componentes afectados...]</span></p>

            <p style="margin-top: 10px;"><span class="field-label">Impacto:</span> <span class="field-description">Especifique la influencia y la magnitud...</span></p>
            <div class="field-value editable-block" data-field="impacto">[Impacto esperado...]</div>

            <p style="margin-top: 10px;"><span class="field-label">Esfuerzo estimado:</span> <span class="field-description">(Normalmente rellenado por equipo técnico)</span></p>
            <p><span class="field-value editable-target" data-field="esfuerzo">[Estimación...]</span></p>
        </div>

        <div class="section-title">ATENCIÓN DE LA SOLICITUD</div>
        <table>
            <tr>
                <td style="width: 75%;">
                    <span class="field-label">Recibido por:</span>
                    <span class="field-value editable-target" data-field="recibidoPor">[Gestor/Líder]</span>
                </td>
                <td style="width: 25%;">
                    <span class="field-label">Fecha Recepción:</span>
                    <span class="field-value editable-target" data-field="fechaRecepcion">[dd/mm/aaaa]</span>
                </td>
            </tr>
        </table>

        <div class="section-title">Detalles</div>
        <table style="margin-bottom: 0;">
            <tr>
                <td style="width: 33%;">
                    <span class="field-label">Estado:</span>
                    <span class="field-value editable-target" data-field="estado">[Estado Actual]</span>
                    <span class="field-description">(Propuesto/Aprobado/...)</span>
                </td>
                <td style="width: 33%;">
                    <span class="field-label">Fecha Estado:</span>
                    <span class="field-value editable-target" data-field="fechaEstado">[dd/mm/aaaa]</span>
                </td>
                <td style="width: 34%;">
                    <span class="field-label">Giro a Jefe Proy.–Fecha:</span>
                    <span class="field-value editable-target" data-field="fechaGiroJP">[dd/mm/aaaa]</span>
                </td>
            </tr>
            <tr>
                <td>
                    <span class="field-label">Impl. Cambio–Fecha:</span>
                    <span class="field-value editable-target" data-field="fechaImplementacion">[dd/mm/aaaa]</span>
                </td>
                <td>
                    <span class="field-label">Mod. Versión–Fecha:</span>
                    <span class="field-value editable-target" data-field="fechaModVersion">[dd/mm/aaaa]</span>
                </td>
                <td>
                    <span class="field-label">Cierre Cambio–Fecha:</span>
                    <span class="field-value editable-target" data-field="fechaCierre">[dd/mm/aaaa]</span>
                </td>
            </tr>
        </table>

        <div class="content-block" style="border-top: 1px solid black;">
            <span class="field-label">Observaciones:</span> <span class="field-description">Mencione cualquier detalle significativo...</span>
            <div class="field-value editable-block" data-field="observaciones">[Observaciones relevantes...]</div>
        </div>

    </div>

    <script>
        const btnEdit = document.getElementById('btnEdit');
        const btnSave = document.getElementById('btnSave');
        const btnCancelEdit = document.getElementById('btnCancelEdit');
        const btnDelete = document.getElementById('btnDelete');
        const btnPrint = document.getElementById('btnPrint');
        const editableTargets = document.querySelectorAll('.editable-target, .editable-block');
        const numSolicitudSpan = document.getElementById('numSolicitud');
        const solicitudContent = document.getElementById('solicitudContent');
        const backButton = document.querySelector('.action-buttons a');
        let currentSolicitudId = 'SC-DEMO';
        let originalValues = {};
        let isEditing = false;

        // --- OBTENER ID DE LA URL ---
        function getSolicitudIdFromUrl() {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get('id') || 'SC-DEMO';
        }

        // --- MODO EDICIÓN ---
        function enterEditMode() {
            if (isEditing) return;
            originalValues = {};
            solicitudContent.classList.add('editing');
            editableTargets.forEach(el => {
                const field = el.dataset.field;
                originalValues[field] = el.innerHTML;
                el.contentEditable = true;
            });
            isEditing = true;
            toggleButtons();
        }

        function exitEditMode(restore = false) {
            if (!isEditing) return;
            solicitudContent.classList.remove('editing');
            editableTargets.forEach(el => {
                if (restore) {
                    const field = el.dataset.field;
                    if (originalValues[field] !== undefined) {
                        el.innerHTML = originalValues[field];
                    }
                }
                el.contentEditable = false;
            });
            isEditing = false;
            toggleButtons();
        }

        function toggleButtons() {
            btnEdit.style.display = isEditing ? 'none' : 'inline-block';
            btnDelete.style.display = isEditing ? 'none' : 'inline-block';
            btnPrint.style.display = isEditing ? 'none' : 'inline-block';
            btnSave.style.display = isEditing ? 'inline-block' : 'none';
            btnCancelEdit.style.display = isEditing ? 'inline-block' : 'none';
            const estadoActual = originalValues['estado'] || document.querySelector('[data-field="estado"]').textContent;
            if (!isEditing && estadoActual !== '[Estado Actual]' && estadoActual !== 'Propuesto') {
                btnEdit.disabled = true;
                btnEdit.title = 'No se puede editar una solicitud que no esté en estado "Propuesto"';
                btnDelete.disabled = true;
                btnDelete.title = 'No se puede eliminar una solicitud que no esté en estado "Propuesto"';
            } else if (!isEditing) {
                btnEdit.disabled = false;
                btnEdit.title = 'Habilitar Edición';
                btnDelete.disabled = false;
                btnDelete.title = 'Eliminar Solicitud';
            }
        }

        function saveChanges() {
            const updatedData = { id: currentSolicitudId };
            editableTargets.forEach(el => {
                const field = el.dataset.field;
                updatedData[field] = el.innerHTML.replace(/<div><br><\/div>/g, '<br>').replace(/<div>/g, '<br>').replace(/<\/div>/g, ''); // Limpiar divs extra de contenteditable
            });

            console.log(`Datos actualizados para ${currentSolicitudId} (simulado):`, updatedData);

            let solicitudes = JSON.parse(localStorage.getItem('solicitudesCliente')) || [];
            const index = solicitudes.findIndex(s => s.id === currentSolicitudId);
            if (index !== -1) {
                solicitudes[index] = { ...solicitudes[index], ...updatedData };
                localStorage.setItem('solicitudesCliente', JSON.stringify(solicitudes));
                alert(`Cambios guardados para ${currentSolicitudId} (Simulación).`);
                exitEditMode(false);
            } else {
                alert(`Error: No se encontró la solicitud ${currentSolicitudId} para guardar.`);
                exitEditMode(true);
            }

        }

        function deleteSolicitud() {
            if (confirm(`¿Está seguro de que desea eliminar la solicitud ${currentSolicitudId}? Esta acción no se puede deshacer.`)) {
                console.log("Eliminando solicitud (simulado):", currentSolicitudId);

                let solicitudes = JSON.parse(localStorage.getItem('solicitudesCliente')) || [];
                solicitudes = solicitudes.filter(s => s.id !== currentSolicitudId);
                localStorage.setItem('solicitudesCliente', JSON.stringify(solicitudes));
        s
                alert(`Solicitud ${currentSolicitudId} eliminada (Simulación).\nSerá redirigido a la lista.`);
                window.location.href = backButton.href; 

            }
        }

        function exportToPdf() {
            window.print();
        }

        function loadSolicitudData(id) {
            numSolicitudSpan.textContent = id;
            document.title = `Detalle Solicitud - ${id}`;

            let solicitudes = JSON.parse(localStorage.getItem('solicitudesCliente')) || [];
            const data = solicitudes.find(s => s.id === id);

            if (data) {
                console.log("Cargando datos desde localStorage para:", id, data);
                editableTargets.forEach(el => {
                    const field = el.dataset.field;
                    if (data[field] !== undefined && data[field] !== null) {
                        el.innerHTML = data[field];
                    } else {
                        el.innerHTML = `[${field.charAt(0).toUpperCase() + field.slice(1)}]`;
                    }
                });
                originalValues = { ...data };
            } else {
                console.warn("No se encontraron datos en localStorage para:", id);
                alert(`No se encontraron datos para la solicitud ${id}. Mostrando plantilla vacía.`);
                editableTargets.forEach(el => {
                    const field = el.dataset.field;
                    el.innerHTML = `[${field.charAt(0).toUpperCase() + field.slice(1)}]`;
                });
                originalValues = {};
            }
            toggleButtons();
        }

        document.addEventListener('DOMContentLoaded', function () {
            btnEdit.addEventListener('click', enterEditMode);
            btnCancelEdit.addEventListener('click', () => exitEditMode(true));
            btnSave.addEventListener('click', saveChanges);
            btnDelete.addEventListener('click', deleteSolicitud);
            btnPrint.addEventListener('click', exportToPdf);

            currentSolicitudId = getSolicitudIdFromUrl();
            loadSolicitudData(currentSolicitudId);
        });

    </script>
</body>
</html>