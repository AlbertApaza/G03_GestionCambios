@model G03_ProyectoGestion.Models.ViewModels.CrearProyectoViewModel

@{
    ViewBag.Title = "Crear Proyecto";
}

<h2>Crear Proyecto</h2>

@using (Html.BeginForm("CrearProyecto", "Proyectos", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <!-- Campos de información del proyecto -->

    <div class="form-group">
        @Html.LabelFor(m => m.Proyecto.nombreProyecto)
        @Html.TextBoxFor(m => m.Proyecto.nombreProyecto, new { @class = "form-control", placeholder = "Nombre del proyecto" })
        @Html.ValidationMessageFor(m => m.Proyecto.nombreProyecto, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Proyecto.descripcionProyecto)
        @Html.TextAreaFor(m => m.Proyecto.descripcionProyecto, new { @class = "form-control", placeholder = "Descripción del proyecto" })
        @Html.ValidationMessageFor(m => m.Proyecto.descripcionProyecto, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Proyecto.fechaInicio)
        @Html.TextBoxFor(m => m.Proyecto.fechaInicio, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(m => m.Proyecto.fechaInicio, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Proyecto.fechaFin)
        @Html.TextBoxFor(m => m.Proyecto.fechaFin, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(m => m.Proyecto.fechaFin, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Proyecto.idMetodologia)
        @Html.DropDownListFor(m => m.Proyecto.idMetodologia, Model.Metodologias, "Selecciona Metodología", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Proyecto.idMetodologia, "", new { @class = "text-danger" })
    </div>

    <h3>Miembros del Proyecto</h3>
    <div id="miembros">
        @for (int i = 0; i < Model.Miembros.Count; i++)
        {
            <div class="form-group">
                @Html.DropDownListFor(m => m.Miembros[i].IdUsuario, Model.Usuarios, "Selecciona Miembro", new { @class = "form-control" })
                @Html.DropDownListFor(m => m.Miembros[i].IdRol, Model.Roles, "Selecciona Rol", new { @class = "form-control" })
                <button type="button" class="btn btn-danger" onclick="eliminarMiembro(@i)">Eliminar Miembro</button>
            </div>
        }
    </div>
    <button type="button" class="btn btn-primary" onclick="agregarMiembro()">Agregar Miembro</button>

    <button type="submit" class="btn btn-success">Crear Proyecto</button>
}

<script type="text/javascript">
    // Función para agregar miembros al formulario dinámicamente
    function agregarMiembro() {
        var index = $('#miembros .form-group').length;

        // Generamos el HTML para los nuevos miembros dinámicamente
        var miembroHtml = `
            <div class="form-group">
                <select name="Miembros[${index}].IdUsuario" class="form-control">
                    @foreach (var usuario in Model.Usuarios)
                    {
                        <option value="@usuario.Value">@usuario.Text</option>
                    }
                </select>
                <select name="Miembros[${index}].IdRol" class="form-control">
                    @foreach (var rol in Model.Roles)
                    {
                        <option value="@rol.Value">@rol.Text</option>
                    }
                </select>
                <button type="button" class="btn btn-danger" onclick="eliminarMiembro(${index})">Eliminar Miembro</button>
            </div>
        `;

        // Añadimos el nuevo HTML al contenedor
        $('#miembros').append(miembroHtml);
    }

    // Función para eliminar un miembro del formulario
    function eliminarMiembro(index) {
        $('#miembros .form-group').eq(index).remove();
    }
</script>
